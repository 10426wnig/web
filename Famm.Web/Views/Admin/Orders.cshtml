@model Famm.Web.Controllers.OrderListViewModel
@{
    ViewBag.Title = "Управление заказами";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="row mb-4">
    <div class="col-12">
        <div class="admin-card">
            <div class="admin-card-header">
                <h3>Заказы</h3>
                <div class="d-flex gap-2">
                    <a href="@Url.Action("Orders", "Admin", new { status = "Pending" })" class="btn @(Model.Status == "Pending" ? "btn-warning" : "btn-outline-warning") btn-sm">
                        Ожидающие
                    </a>
                    <a href="@Url.Action("Orders", "Admin", new { status = "Processing" })" class="btn @(Model.Status == "Processing" ? "btn-info" : "btn-outline-info") btn-sm">
                        В обработке
                    </a>
                    <a href="@Url.Action("Orders", "Admin", new { status = "Shipped" })" class="btn @(Model.Status == "Shipped" ? "btn-primary" : "btn-outline-primary") btn-sm">
                        Отправленные
                    </a>
                    <a href="@Url.Action("Orders", "Admin", new { status = "Delivered" })" class="btn @(Model.Status == "Delivered" ? "btn-success" : "btn-outline-success") btn-sm">
                        Доставленные
                    </a>
                    <a href="@Url.Action("Orders", "Admin", new { status = "Cancelled" })" class="btn @(Model.Status == "Cancelled" ? "btn-danger" : "btn-outline-danger") btn-sm">
                        Отмененные
                    </a>
                    <a href="@Url.Action("Orders", "Admin")" class="btn @(string.IsNullOrEmpty(Model.Status) ? "btn-dark" : "btn-outline-dark") btn-sm">
                        Все
                    </a>
                </div>
            </div>
            <div class="admin-card-body">
                @if (TempData["SuccessMessage"] != null)
                {
                    <div class="alert alert-success alert-dismissible fade show" role="alert">
                        @TempData["SuccessMessage"]
                        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                    </div>
                }

                @if (Model.Orders.Any())
                {
                    <div class="table-responsive">
                        <table class="table table-striped table-hover admin-table">
                            <thead>
                                <tr>
                                    <th>№ заказа</th>
                                    <th>Дата</th>
                                    <th>Клиент</th>
                                    <th>Сумма</th>
                                    <th>Статус</th>
                                    <th style="width: 100px">Действия</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var order in Model.Orders)
                                {
                                    <tr>
                                        <td>@order.OrderNumber</td>
                                        <td>@order.OrderDate.ToString("dd.MM.yyyy HH:mm")</td>
                                        <td>
                                            <div>
                                                <span class="fw-bold">@order.User.FullName</span>
                                                <div class="small text-muted">@order.User.Email</div>
                                            </div>
                                        </td>
                                        <td>@order.TotalAmount.ToString("N2") MDL</td>
                                        <td>
                                            @switch (order.Status)
                                            {
                                                case Famm.Domain.Models.Enums.OrderStatus.Pending:
                                                    <span class="badge bg-warning">Ожидание</span>
                                                    break;
                                                case Famm.Domain.Models.Enums.OrderStatus.Processing:
                                                    <span class="badge bg-info">Обработка</span>
                                                    break;
                                                case Famm.Domain.Models.Enums.OrderStatus.Shipped:
                                                    <span class="badge bg-primary">Отправлен</span>
                                                    break;
                                                case Famm.Domain.Models.Enums.OrderStatus.Delivered:
                                                    <span class="badge bg-success">Доставлен</span>
                                                    break;
                                                case Famm.Domain.Models.Enums.OrderStatus.Cancelled:
                                                    <span class="badge bg-danger">Отменен</span>
                                                    break;
                                                default:
                                                    <span class="badge bg-secondary">@order.Status</span>
                                                    break;
                                            }
                                        </td>
                                        <td>
                                            <div class="d-flex">
                                                <a href="@Url.Action("OrderDetails", "Admin", new { id = order.Id })" class="btn btn-sm btn-primary" title="Детали">
                                                    <i class="bi bi-eye"></i>
                                                </a>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>

                    if (Model.TotalPages > 1)
                    {
                        <nav aria-label="Page navigation">
                            <ul class="pagination justify-content-center">
                                @if (Model.CurrentPage > 1)
                                {
                                    <li class="page-item">
                                        <a class="page-link" href="@Url.Action("Orders", "Admin", new { status = Model.Status, page = Model.CurrentPage - 1, pageSize = Model.PageSize })">
                                            <i class="bi bi-chevron-left"></i>
                                        </a>
                                    </li>
                                }
                                else
                                {
                                    <li class="page-item disabled">
                                        <span class="page-link"><i class="bi bi-chevron-left"></i></span>
                                    </li>
                                }

                                @{
                                    var startPage = Math.Max(1, Model.CurrentPage - 2);
                                    var endPage = Math.Min(Model.TotalPages, startPage + 4);
                                    if (endPage - startPage < 4 && startPage > 1)
                                    {
                                        startPage = Math.Max(1, endPage - 4);
                                    }
                                }

                                @for (int i = startPage; i <= endPage; i++)
                                {
                                    <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                                        <a class="page-link" href="@Url.Action("Orders", "Admin", new { status = Model.Status, page = i, pageSize = Model.PageSize })">@i</a>
                                    </li>
                                }

                                @if (Model.CurrentPage < Model.TotalPages)
                                {
                                    <li class="page-item">
                                        <a class="page-link" href="@Url.Action("Orders", "Admin", new { status = Model.Status, page = Model.CurrentPage + 1, pageSize = Model.PageSize })">
                                            <i class="bi bi-chevron-right"></i>
                                        </a>
                                    </li>
                                }
                                else
                                {
                                    <li class="page-item disabled">
                                        <span class="page-link"><i class="bi bi-chevron-right"></i></span>
                                    </li>
                                }
                            </ul>
                        </nav>
                    }
                }
                else
                {
                    <div class="alert alert-info text-center">
                        <i class="bi bi-info-circle fs-4 me-2"></i> Заказы не найдены.
                        @if (!string.IsNullOrEmpty(Model.Status))
                        {
                            <p>Измените параметры поиска или <a href="@Url.Action("Orders", "Admin")">просмотрите все заказы</a>.</p>
                        }
                    </div>
                }
            </div>
        </div>
    </div>
</div> 